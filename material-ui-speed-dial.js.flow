// @flow

export type PresetRawType = {|
	root: { [key: string]: number | string },
	button: { [key: string]: number | string },
	buttonOuterRim: { [key: string]: number | string },
	list: { [key: string]: number | string },
	item: { [key: string]: number | string },
	firstItem: { [key: string]: number | string },
	avatar: { [key: string]: number | string },
	label: { [key: string]: number | string },
	backdrop: { [key: string]: number | string },
|};

export type PresetType = {|
	root: string,
	button: string,
	buttonOuterRim: string,
	list: string,
	item: string,
	firstItem: string,
	avatar: string,
	label: string,
	backdrop: string,
|};

export type StateEnumType = 'closed' | 'opening' | 'opened' | 'closing';
export type SpeedDialStateType = {|
	state: StateEnumType,
|};

export type RenderPropsType = {|
	state: StateEnumType,
	className: string,
	preset: PresetType,
	handleClose: () => void,
|};
export type RenderButtonPropsType = {|
	key?: string,
	className: string,
	onClick: () => void,
	state: StateEnumType,
|};
export type RenderButtonIconPropsType = {|
	className: string,
	state: StateEnumType,
|};
export type RenderOpenedButtonPropsType = {|
	key: string,
	className: string,
	onClick: () => void,
	state: StateEnumType,
|};
export type RenderOpenedButtonIconPropsType = {|
	className: string,
	state: StateEnumType,
|};
export type RenderOuterRimButtonPropsType = {|
	className: string,
	state: StateEnumType,
|};
export type RenderOuterRimButtonIconPropsType = {|
	className: string,
	state: StateEnumType,
|};
export type RenderListPropsType = {|
	children: React$Node,
	className: string,
	state: StateEnumType,
|};
export type RenderBackdropPropsType = {|
	className: string,
	state: StateEnumType,
	onClick: (event: SyntheticMouseEvent<HTMLDivElement>) => void,
|};

export type RenderAvatarPropsType = {|
	className: string,
	state: StateEnumType,
|};
export type RenderLabelPropsType = {|
	className: string,
	state: StateEnumType,
|};

export type SpeedDialLabelPropsType = {|
	className: string,
	text: string,
	state: StateEnumType,
|};

export type SpeedDialBackdropPropsType = {|
	className: string,
	state: StateEnumType,
	onClick: (event: SyntheticMouseEvent<HTMLDivElement>) => void,
|};

export type SpeedDialItemPropsType = {|
	className: string,
	preset: PresetType,
	state: StateEnumType,
	renderAvatar?: (props: RenderAvatarPropsType) => React$Element<*>,
	children: (props: RenderLabelPropsType) => React$Element<*>,
	onClick: (event: SyntheticMouseEvent<HTMLDivElement>) => void,
|};

export type SpeedDialPropsType = {|
	children: (props: RenderPropsType) => React$Node,
	className?: string,
	preset: PresetType,
	animationDelay?: number,
	renderButton: (props: RenderButtonPropsType, propsIcon: RenderOpenedButtonIconPropsType) => React$Element<*>,
	renderOpenedButton?: (
		props: RenderOpenedButtonPropsType,
		propsIcon: RenderOpenedButtonIconPropsType
	) => React$Element<*>,
	renderOuterRimButton?: (
		props: RenderOuterRimButtonPropsType,
		propsIcon: RenderOuterRimButtonIconPropsType
	) => React$Element<*>,
	renderList: (props: RenderListPropsType) => React$Element<*>,
	renderBackdrop?: (props: RenderBackdropPropsType) => React$Element<*>,
|};
